# Generated by Django 2.2.2 on 2019-06-28 03:34

import api.enum
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Committee',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('start', models.DateField()),
                ('pre_review', models.DateField()),
                ('review', models.DateField()),
                ('oral_defense', models.DateField()),
                ('end', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Expert',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FormalProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('project_type', models.CharField(blank=True, choices=[(api.enum.ProjectType('Project'), 'Project'), (api.enum.ProjectType('Paper'), 'Paper')], max_length=10, null=True)),
                ('video', models.FileField(blank=True, null=True, upload_to='project_video/')),
                ('category', models.CharField(blank=True, choices=[(api.enum.Category('机械与控制'), '机械与控制'), (api.enum.Category('信息技术'), '信息技术'), (api.enum.Category('数理'), '数理'), (api.enum.Category('生命科学'), '生命科学'), (api.enum.Category('能源化工'), '能源化工'), (api.enum.Category('哲学社会科学'), '哲学社会科学')], max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('keyword', models.TextField(blank=True, null=True)),
                ('innovation', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('student_id', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=100)),
                ('enroll_year', models.IntegerField()),
                ('tel', models.CharField(blank=True, max_length=50, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('education', models.CharField(blank=True, choices=[(api.enum.Education('college'), 'college'), (api.enum.Education('bachelor'), 'bachelor'), (api.enum.Education('master'), 'master'), (api.enum.Education('doctor'), 'doctor')], max_length=50, null=True)),
                ('contact_address', models.CharField(blank=True, max_length=500, null=True)),
                ('major', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Major')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.School')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProjectImg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='project_img/')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf', models.FileField(upload_to='project_file/')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Project')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Student'),
        ),
        migrations.AddField(
            model_name='project',
            name='competition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Competition'),
        ),
        migrations.AddField(
            model_name='project',
            name='school',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.School'),
        ),
        migrations.CreateModel(
            name='Opinion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(blank=True, null=True)),
                ('opinion', models.TextField(blank=True, null=True)),
                ('expert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Expert')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.FormalProject')),
            ],
        ),
        migrations.AddField(
            model_name='formalproject',
            name='expert',
            field=models.ManyToManyField(through='api.Opinion', to='api.Expert'),
        ),
        migrations.AddField(
            model_name='formalproject',
            name='project',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.Project'),
        ),
        migrations.CreateModel(
            name='ExpertList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Competition')),
            ],
        ),
        migrations.CreateModel(
            name='CoAuthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=100)),
                ('education', models.CharField(choices=[(api.enum.Education('college'), 'college'), (api.enum.Education('bachelor'), 'bachelor'), (api.enum.Education('master'), 'master'), (api.enum.Education('doctor'), 'doctor')], max_length=50)),
                ('tel', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Project')),
            ],
        ),
    ]
